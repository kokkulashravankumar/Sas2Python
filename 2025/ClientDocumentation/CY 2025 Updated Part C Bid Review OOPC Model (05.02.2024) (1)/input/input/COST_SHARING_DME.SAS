
* PROGRAM: COST_SHARING_DME.SAS;
* DESCRIPTION: PERFORM COST SHARING ALGORITHM FOR DME CLAIMS;

%MACRO DME_COST_SHARE(SERV_CAT);

 PROC SUMMARY DATA=&INC NWAY MISSING;
    WHERE CATEGORY IN('11b');
    CLASS BASEID YEAR;
    VAR AMTTOT;
    OUTPUT OUT=CAT_SUMMARY (DROP=_TYPE_ _FREQ_) SUM=;
  RUN;

  %obsnvars(CAT_SUMMARY);    
  
  DATA FMTDATA;
    SET CAT_SUMMARY END=LAST;
    LENGTH HLO $1 START $12;
    FMTNAME='$CATFMT';
    START=BASEID || YEAR;
    LABEL=AMTTOT;
    HLO=' ';
    OUTPUT;
    IF LAST THEN DO;
      START='OTHER';
      LABEL=0;
      HLO='O';
      OUTPUT;
    END;
    KEEP FMTNAME START LABEL HLO;
  RUN;
    
  PROC FORMAT CNTLIN=FMTDATA;
  RUN;

  DATA DME_BASEID;
    RETAIN JOIN_ID '1';
    SET &INC(WHERE=(CATEGORY='11a'));
  RUN;
  
  DATA DME_FILE;
    SET  PBP_FILE(KEEP =
                  CONTRACT_ID PLAN_ID SEGMENT_ID HPLAN
                  PBP_B11A_DED_AMT 
                  PBP_B11A_MAXENR_AMT
                  PBP_B11A_MAXENR_PER 
                  PBP_B11A_COINS_PCT_MC 
                  PBP_B11A_COPAY_MC_AMT
                  PBP_B11B_MAXENR_PER
                  PBP_B11B_MAXENR_AMT
                  PBP_B11B_MAXENR_COST_TYPE
                  PBP_A_PLAN_TYPE
                  PBP_D_DIFF_DEDUCT_11A_AMT);
    JOIN_ID = '1';
    %ANNUALIZATION(PBP_B11A_MAXENR_PER,PBP_B11A_MAXENR_AMT);
    %ANNUALIZATION(PBP_B11B_MAXENR_PER,PBP_B11B_MAXENR_AMT);
  RUN;

  PROC SQL;
    CREATE TABLE CAT_JOIN AS
      (SELECT B.CATEGORY, B.BASEID, B.VISITS, B.AMTTOT, B.YEAR, P.*
      FROM DME_BASEID B, DME_FILE P
      WHERE B.JOIN_ID = P.JOIN_ID)
      ORDER BY HPLAN, BASEID, YEAR, CATEGORY;
    QUIT;
  RUN;
     
  DATA CAT_JOIN;
    MERGE CAT_JOIN (IN = A) 
          PBPCATS_MCCOST_DED (IN = B WHERE=(CATEGORY='11a'));
    BY HPLAN BASEID YEAR CATEGORY;
    IF A;
    LENGTH PLAN_DED_CAT $1;
    IF B THEN PLAN_DED_CAT='1';
    ELSE PLAN_DED_CAT='0';
  RUN;
   
  DATA &SERV_CAT;
    SET CAT_JOIN (DROP = JOIN_ID);
    COST_SHARE_COST = 0;
    OTHER_COST = 0;
    COST = 0;

    IF PLAN_DED_CAT='1' THEN DO;
      IF PLAN_DED_AMTTOT_MC_PTB>0 THEN CAT_DEDUCTIBLE=PLAN_DED_AMTTOT_MC_PTB;
      ELSE CAT_DEDUCTIBLE=PLAN_DED_AMTTOT_MC;
    END;
    ELSE IF PBP_A_PLAN_TYPE IN('04','31','44','47') THEN 
      CAT_DEDUCTIBLE=PBP_D_DIFF_DEDUCT_11A_AMT;
    ELSE CAT_DEDUCTIBLE=PBP_B11A_DED_AMT;
    
    IF PBP_B11A_MAXENR_AMT NE . THEN 
      BENE_MAXIMUM = PBP_B11A_MAXENR_AMT;
    
    BASEIDYR=BASEID || YEAR;
    IF PBP_B11B_MAXENR_AMT = . & 
      PBP_B11B_MAXENR_COST_TYPE = '1' THEN DO;
      %IF "&NOBS." > "0" %THEN %DO;
        AMTTOTU=INPUT(PUT(BASEIDYR,$CATFMT.),8.);
      %END;
      %ELSE %DO;
        AMTTOTU=0;
      %END;
      PBPCAT_TOT=SUM(AMTTOTU,AMTTOT);
      IF PBPCAT_TOT>0 THEN 
        BENE_MAXIMUM = PBP_B11A_MAXENR_AMT*(AMTTOT/PBPCAT_TOT);
    END;

    IF CAT_DEDUCTIBLE = . THEN DO;
      COST = SUM(COST, (VISITS * PBP_B11A_COPAY_MC_AMT));
      COST = SUM(COST, AMTTOT * PBP_B11A_COINS_PCT_MC);
    END;
    ELSE DO;
      IF AMTTOT <= CAT_DEDUCTIBLE THEN DO;
        COST = AMTTOT;
      END;
      ELSE DO;
        COST = CAT_DEDUCTIBLE;
        DEDUCT_SHARE = CAT_DEDUCTIBLE / AMTTOT;
        AMTTOT = SUM(AMTTOT,-CAT_DEDUCTIBLE);
        VISITS = VISITS * (1 - DEDUCT_SHARE);
        COST = SUM(COST, (VISITS * PBP_B11A_COPAY_MC_AMT));
        COST = SUM(COST, AMTTOT * PBP_B11A_COINS_PCT_MC);
      END;
    END;

    IF BENE_MAXIMUM >= 0 AND COST >= 0 THEN COST = MIN(COST, BENE_MAXIMUM);

    COST_SHARE_COST = COST;

    COST_SHARE_COST_MC  = COST;
    COST_SHARE_COST_AMO = 0;

    CATEGORY = "11a";
  RUN;

  PROC APPEND DATA=DME(KEEP=HPLAN YEAR BASEID COST_SHARE_COST 
    COST_SHARE_COST_MC COST_SHARE_COST_AMO
    OTHER_COST COST CATEGORY AMTTOT)  BASE= COSTDATA FORCE;
  RUN;

  PROC DATASETS LIBRARY=WORK NODETAILS NOLIST;
    DELETE DME DME_BASEID DME_FILE CAT_JOIN;
    QUIT;
  RUN;
  
%MEND;
